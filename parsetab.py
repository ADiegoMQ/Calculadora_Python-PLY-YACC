
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONrightUMENOSDIVISION IGUAL MULTIPLICACION NOMBRE NUMERO PARENTESIS_DER PARENTESIS_IZQ RESTA SUMAsentencia : NOMBRE IGUAL expresionsentencia : expresionexpresion : expresion SUMA expresion\n                  | expresion RESTA expresion\n                  | expresion MULTIPLICACION expresion\n                  | expresion DIVISION expresionexpresion : RESTA expresion %prec UMENOSexpresion : PARENTESIS_IZQ expresion PARENTESIS_DERexpresion : NUMEROexpresion : NOMBRE'
    
_lr_action_items = {'NOMBRE':([0,4,5,7,8,9,10,11,],[2,13,13,13,13,13,13,13,]),'RESTA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[4,-10,9,4,4,-9,4,4,4,4,4,-7,-10,9,9,-3,-4,-5,-6,-8,]),'PARENTESIS_IZQ':([0,4,5,7,8,9,10,11,],[5,5,5,5,5,5,5,5,]),'NUMERO':([0,4,5,7,8,9,10,11,],[6,6,6,6,6,6,6,6,]),'$end':([1,2,3,6,12,13,15,16,17,18,19,20,],[0,-10,-2,-9,-7,-10,-1,-3,-4,-5,-6,-8,]),'IGUAL':([2,],[7,]),'SUMA':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,8,-9,-7,-10,8,8,-3,-4,-5,-6,-8,]),'MULTIPLICACION':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,10,-9,-7,-10,10,10,10,10,-5,-6,-8,]),'DIVISION':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,11,-9,-7,-10,11,11,11,11,-5,-6,-8,]),'PARENTESIS_DER':([6,12,13,14,16,17,18,19,20,],[-9,-7,-10,20,-3,-4,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,],[1,]),'expresion':([0,4,5,7,8,9,10,11,],[3,12,14,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> NOMBRE IGUAL expresion','sentencia',3,'p_sentencia_asignacion','yacc.py',54),
  ('sentencia -> expresion','sentencia',1,'p_sentencia_expresion','yacc.py',58),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','yacc.py',62),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','yacc.py',63),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binaria','yacc.py',64),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria','yacc.py',65),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','yacc.py',72),
  ('expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',3,'p_expresion_agrupacion','yacc.py',76),
  ('expresion -> NUMERO','expresion',1,'p_expresion_numero','yacc.py',80),
  ('expresion -> NOMBRE','expresion',1,'p_expresion_nombre','yacc.py',84),
]
